{"ast":null,"code":"var _jsxFileName = \"/Users/moldyr/Desktop/handling inputForms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredValueIsValid, setEnteredValueIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState();\n  useEffect(() => {\n    if (enteredValueIsValid) {\n      console.log('name input is valid');\n    }\n  });\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredValueIsValid(false);\n      return;\n    }\n\n    setEnteredValueIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = enteredValueIsValid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), !enteredValueIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"wVgg8jrt+1w4y27FLUWgL24t6lk=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/moldyr/Desktop/handling inputForms/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredValueIsValid","setEnteredValueIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGL,MAAM,EAA3B;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,EAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,mBAAJ,EAAyB;AACvBI,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GAJQ,CAAT;;AAOA,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIH,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIb,WAAW,CAACc,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BX,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACA;AACD;;AAEDA,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,UAAMe,YAAY,GAAGhB,YAAY,CAACiB,OAAb,CAAqBL,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ;AAEAd,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAfD;;AAiBA,QAAMgB,gBAAgB,GAAGf,mBAAmB,GAAG,cAAH,GAAoB,sBAAhE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEU,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAElB,YAAZ;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,QAAQ,EAAES,sBAA1D;AAAkF,QAAA,KAAK,EAAER;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACE,mBAAD,iBAAwB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhDD;;GAAML,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import { useRef, useState, useEffect } from 'react'\n\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredValueIsValid, setEnteredValueIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState()\n\n  useEffect(() => {\n    if (enteredValueIsValid) {\n      console.log('name input is valid')\n    }\n  })\n\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value)\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredValueIsValid(false)\n      return;\n    }\n\n    setEnteredValueIsValid(true)\n    console.log(enteredName)\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue)\n\n    setEnteredName(\"\");\n  }\n\n  const nameInputClasses = enteredValueIsValid ? 'form-control' : 'form-control invalid'\n\n  return (\n    <form onSubmit={formSubmitHandler} >\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' onChange={nameInputChangeHandler} value={enteredName} />\n        {!enteredValueIsValid && <p className='error-text'>Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form >\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}