{"ast":null,"code":"var _jsxFileName = \"/Users/moldyr/Desktop/handling inputForms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/moldyr/Desktop/handling inputForms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","nameInputIsInvalid","enteredNameIsValid","trim","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmitHandler","preventDefault","setEnteredNameIsValid","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMO,kBAAkB,GAAG,CAACC,kBAAD,IAAuBH,kBAAlD;AACA,QAAMG,kBAAkB,GAAGL,WAAW,CAACM,IAAZ,OAAuB,EAAlD;;AAGA,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxCP,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCR,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAIJ,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACK,cAAN;AACAV,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIH,WAAW,CAACM,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BQ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AAED;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAbD;;AAgBA,QAAMgB,gBAAgB,GAAGb,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,iBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEV,sBAAvC;AAA+D,QAAA,KAAK,EAAEP,WAAtE;AACE,QAAA,MAAM,EAAEW;AADV;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGP,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CD;;GAAMN,W;;KAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react'\n\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n  const enteredNameIsValid = enteredName.trim() !== '';\n\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  }\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false)\n\n    }\n\n    setEnteredNameIsValid(true)\n    console.log(enteredName)\n\n    setEnteredName(\"\");\n  }\n\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmitHandler} >\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} value={enteredName}\n          onBlur={nameInputBlurHandler} />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form >\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}