{"ast":null,"code":"var _jsxFileName = \"/Users/moldyr/Desktop/handling inputForms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\n// import {useReducer} from 'react';\n// const initialInputState = {\n//   value: '';\n//   isTouched: false;\n// }\n// const inputStateReducer = (state, action) => {\n// return initialInputState\n//}\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: nameInputIsValid,\n    reset: nameValueReset\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    isValid: lastNameInputIsValid,\n    reset: lastNameValueReset\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailInputIsValid,\n    reset: emailValueReset\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (nameInputIsValid && lastNameInputIsValid && emailInputIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    nameValueReset();\n    lastNameValueReset();\n    emailValueReset();\n\n    if (!nameInputIsValid && !lastNameInputIsValid && !emailInputIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: nameInputChangeHandler,\n          onBlur: nameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameInputChangeHandler,\n          onBlur: lastNameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), nameInputHasError && lastNameInputHasError && emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Input values cannot be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"ekiq3rVOejvxKkzQ9oYB2sZfMR0=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/moldyr/Desktop/handling inputForms/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameInputChangeHandler","inputBlurHandler","nameInputBlurHandler","isValid","nameInputIsValid","reset","nameValueReset","trim","enteredLastName","lastNameInputHasError","lastNameInputChangeHandler","lastNameInputBlurHandler","lastNameInputIsValid","lastNameValueReset","enteredEmail","emailInputHasError","emailInputChangeHandler","emailInputBlurHandler","emailInputIsValid","emailValueReset","includes","formIsValid","formSubmitHandler","event","preventDefault","console","log","nameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["// import {useReducer} from 'react';\n\n\n// const initialInputState = {\n//   value: '';\n//   isTouched: false;\n// }\n\n// const inputStateReducer = (state, action) => {\n// return initialInputState\n//}\n\n\n\nimport useInput from '../hooks/use-input'\n\nconst BasicForm = (props) => {\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameInputChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    isValid: nameInputIsValid,\n    reset: nameValueReset\n  } = useInput(value => value.trim() !== '');\n\n\n  const {\n    value: enteredLastName,\n    hasError: lastNameInputHasError,\n    valueChangeHandler: lastNameInputChangeHandler,\n    inputBlurHandler: lastNameInputBlurHandler,\n    isValid: lastNameInputIsValid,\n    reset: lastNameValueReset\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailInputChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    isValid: emailInputIsValid,\n    reset: emailValueReset\n  } = useInput(value => value.includes('@'));\n\n\n  let formIsValid = false;\n  if (nameInputIsValid && lastNameInputIsValid && emailInputIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    nameValueReset();\n    lastNameValueReset()\n    emailValueReset()\n\n    if (!nameInputIsValid && !lastNameInputIsValid && !emailInputIsValid) {\n      return\n    }\n    console.log(enteredName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n  }\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control'\n  const lastNameInputClasses = lastNameInputHasError ? 'form-control invalid' : 'form-control'\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control'\n\n\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={nameInputClasses}>\n          <label htmlFor='name' >First Name</label>\n          <input type='text' id='name' value={enteredName} onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} />\n          {nameInputHasError && <p>Enter first name</p>}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' value={enteredLastName} onChange={lastNameInputChangeHandler} onBlur={lastNameInputBlurHandler} />\n          {nameInputHasError && <p>Enter last name</p>}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' value={enteredEmail} onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} />\n        {nameInputHasError && <p>Enter your email</p>}\n      </div>\n      {nameInputHasError && lastNameInputHasError && emailInputHasError && <p>Input values cannot be empty</p>}\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}